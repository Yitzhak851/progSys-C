## Use command ##

/*=====================================================*/
/*================= ## Compilation ## =================*/
/*=====================================================*/

/*--------------------- Problem_1 ---------------------*/
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_1 -o test_ex4_1_1
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_2 -o test_ex4_1_2
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_3 -o test_ex4_1_3
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_4 -o test_ex4_1_4
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_5 -o test_ex4_1_5
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_6 -o test_ex4_1_6
gcc /share/ex_data/ex4/test_ex4.c newWord.c -Wall -D TEST_1_7 -o test_ex4_1_7
/*--------------------- Problem_2 ---------------------*/
gcc -Wall newWordParser.c newWord.c -o newWordParser

/*=====================================================*/
/*=================== ## running ## ===================*/
/*=====================================================*/

/*--------------------- Problem_1 ---------------------*/
./test_ex4_1_1 | diff - /share/ex_data/ex4/test_ex4_1_1.out
./test_ex4_1_2 | diff - /share/ex_data/ex4/test_ex4_1_2.out
./test_ex4_1_3 | diff - /share/ex_data/ex4/test_ex4_1_3.out
./test_ex4_1_4 | diff - /share/ex_data/ex4/test_ex4_1_4.out
./test_ex4_1_5 | diff - /share/ex_data/ex4/test_ex4_1_5.out
./test_ex4_1_6 | diff - /share/ex_data/ex4/test_ex4_1_6.out
./test_ex4_1_7 | diff - /share/ex_data/ex4/test_ex4_1_7.out
/*--------------------- Problem_2 ---------------------*/
echo "How is everyone doing?We hope you're 100%.$" | ./newWordParser
echo "one 2 thr33. 4.4 f1ve six.7 eight nine.Ten$" | ./newWordParser
echo "Good.luck.everyone.Hope.you.enjoyed.your.1st.assignment.in.C$" \ | ./newWordParser



|   2   - executing program with input arguments: one 2 thr33. 4.4 f1ve six.7 eight nine.Ten$
|         unexpected output. Expected vs. actual output shown below side by side (lines with diff have | or < or > in the middle):
one 2 thr33.                                                    one 2 thr33.
4.4 f1ve six.7 eight nine.                                      4.4 f1ve six.7 eight nine.
Ten                                                             Ten
Number of words is 4                                            Number of words is 4
Number of numbers is 2                                        | Number of numbers is 3
Number of mixed words is 3                                    | Number of mixed words is 2

gcc -Wall newWordParserTest.c -o newWordParserTest
echo "one 2 thr33. 4.4 f1ve six.7 eight nine.Ten$" | ./newWordParserTest

thr33.  ==>   isNum==






check_ex ex4

gcc --version
gcc program.c >> a.exe
gcc program.c -o file >> file.exe


// 1.1 => int charToASI(char ch);
// 1.2 => int ASItoChar(int ASIval);
// 1.3 => int getASIblock(int newWord, int ind);
// 1.4 => int isWordFull(int newWord);
// 1.5 => int newWordType(int newWord);
// 1.6 => int appendWordChar(int newWord, char ch);
// 1.7 => void printNewWord(int newWord);
